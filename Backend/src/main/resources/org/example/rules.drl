/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.example;

import model.Sintoma;
import model.Diagnostico;
import model.Ignorar;
import function fabrica.FabricaQuestoes.answer;
import java.util.List;

query "obterDiagnosticos"
	$diagnostico : Diagnostico()
end

rule "#1 - Irregularidades no motor"
when
	eval(answer("Quais são os sintomas que o seu automóvel apresenta?", List.of("Irregularidades no motor","Luzes do painel", "O veículo tem dificuldades ao dar o terceiro contacto de ignição", "Fumo anormal"), "Irregularidades no motor", "1",true));
then

end

rule "#2 - Qual destes sintomas o automóvel apresenta?(Ruído Sopro/Assobio e cheiro dentro do veículo)"
when
    Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Ruído de Sopro ou Assobio", "2",true));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Cheiro dentro do veículo", "2",true));
then
	Ignorar ign = new Ignorar(1);
	insert(ign);
end

rule "#3 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
    Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Sopro ou Assobio".getBytes(), "UTF-8"));
    Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro dentro do veículo".getBytes(), "UTF-8"));
	eval(answer("4|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim","3",false));
then

end

rule "#4 - O automóvel tem uma perda de potência acentuada? (Sim)"
when
    Sintoma(evidencia == new String("4|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("5|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "4",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (100%)");
	insert(diag);
end 

rule "#5 - O automóvel tem uma perda de potência acentuada? (Não)"
when
    Sintoma(evidencia == new String("4|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("5|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "5",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (93%)");
	insert(diag);
end

rule "#6 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Sopro ou Assobio".getBytes(), "UTF-8"));
    Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro dentro do veículo".getBytes(), "UTF-8"));
	eval(answer("4|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "6",false));
then

end

rule "#7 - O automóvel tem uma perda de potência acentuada? (Sim)"
when
    Sintoma(evidencia == new String("4|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("5|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim","7",false));
then
 	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (93%)");
	insert(diag);
end

rule "#8 - O automóvel tem uma perda de potência acentuada? (Não)"
when
    Sintoma(evidencia == new String("4|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("5|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não","8",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (85%)");
	insert(diag);
end

rule "#9 - Qual destes sintomas o automóvel apresenta?(Ruído Sopro ou Assobio)"
when
	not Ignorar(ID == 1);
    Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Ruído de Sopro ou Assobio", "9",true));
then

end

rule "#10 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
	not Ignorar(ID == 1);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Sopro ou Assobio".getBytes(), "UTF-8"));
	eval(answer("5|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim", "10",false));
then

end

rule "#11 - O automóvel tem uma perda de potência acentuada? (Sim)"
when
	Sintoma(evidencia == new String("5|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("6|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "11",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (65%)");
	insert(diag);
end

rule "#12 - O automóvel tem uma perda de potência acentuada? (Não)"
when
	Sintoma(evidencia == new String("5|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("6|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "12",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (58%)");
	insert(diag);
end

rule "#13 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	not Ignorar(ID == 1);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Sopro ou Assobio".getBytes(), "UTF-8"));
	eval(answer("5|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "13",false));
then

end

rule "#14 - O automóvel tem uma perda de potência acentuada? (Sim)"
when
	Sintoma(evidencia == new String("5|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("6|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "14",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (58%)");
	insert(diag);
end

rule "#15 - o automóvel tem uma perda de potência acentuada? (Não)"
when
	Sintoma(evidencia == new String("5|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("6|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "15",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (50%)");
	insert(diag);
end

rule "#16 - Qual destes sintomas o automóvel apresenta?(Cheiro dentro do veículo)"
when
	not Ignorar(ID == 1);
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Cheiro dentro do veículo", "16",true));
then

end

rule "#17 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
	not Ignorar(ID == 1);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro dentro do veículo".getBytes(), "UTF-8"));
	eval(answer("6|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim", "17",false));
then

end

rule "#18 - O automóvel tem uma perda de potência acentuada? (Sim)"
when
	Sintoma(evidencia == new String("6|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("7|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "18",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (65%)");
	insert(diag);
end

rule "#19 - O automóvel tem uma perda de potência acentuada? (Não)"
when
	Sintoma(evidencia == new String("6|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("7|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "19",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (58%)");
	insert(diag);
end

rule "#20 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	not Ignorar(ID == 1);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro dentro do veículo".getBytes(), "UTF-8"));
	eval(answer("6|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "20",false));
then

end

rule "#21 - O automóvel tem uma perda de potência acentuada? (Sim)"
when
	Sintoma(evidencia == new String("6|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("7|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "21",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (58%)");
	insert(diag);
end

rule "#22 - O automóvel tem uma perda de potência acentuada? (Não)"
when
	Sintoma(evidencia == new String("6|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("7|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "22",false));
then
	Diagnostico diag = new Diagnostico("Fuga no coletor de escape. (50%)");
	insert(diag);
end

rule "#23 - Qual destes sintomas o automóvel apresenta?(Ruído de Batida e gases de escape dentro ou ao redor do veículo)"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Ruído de Batida", "23",true));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Cheiro de gases de escape ao redor do veículo", "23",true));
then
	Ignorar ign = new Ignorar(2);
	insert(ign);
end

rule "#24 - Há fuligem na traseira do veículo?(Sim)"

when
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Batida".getBytes(), "UTF-8"));
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro de gases de escape ao redor do veículo".getBytes(), "UTF-8"));
	eval(answer("1|Há fuligem na traseira do veículo?", List.of("Sim","Não"), "Sim", "24",false));
then

end

rule "#25 - Existem pontos de ferrugem ou corrosão avançada?(Sim)"
when
	Sintoma(evidencia == new String("1|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Sim", "25",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(100%)");
	insert(diag);
end

rule "#26 - Existem pontos de ferrugem ou corrosão avançada?(Não)"
when
	Sintoma(evidencia == new String("1|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Não", "26",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(93%)");
	insert(diag);
end

rule "#27 - Há fuligem na traseira do veículo?(Não)"
when
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Batida".getBytes(), "UTF-8"));
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro de gases de escape ao redor do veículo".getBytes(), "UTF-8"));
	eval(answer("1|Há fuligem na traseira do veículo?", List.of("Sim","Não"), "Não", "27",false));
then

end

rule "#28 - Existem pontos de ferrugem ou corrosão avançada?(Sim)"
when
	Sintoma(evidencia == new String("1|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Sim", "28",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(93%)");
	insert(diag);
end

rule "#29 - Existem pontos de ferrugem ou corrosão avançada?(Não)"
when
	Sintoma(evidencia == new String("1|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Não", "29",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(85%)");
	insert(diag);
end

rule "#30 - Qual destes sintomas o automóvel apresenta?(Ruído de Batida)"
when
	not Ignorar(ID == 2);
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Ruído de Batida", "30",false));
then

end

rule "#31 - Há fuligem na traseira do veículo?(Sim)"
when
	not Ignorar(ID == 2);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Batida".getBytes(), "UTF-8"));
	eval(answer("2|Há fuligem na traseira do veículo?", List.of("Sim","Não"), "Sim", "31",false));
then

end

rule "#32 - Após uma inspeção visual, revelado pontos de ferrugem ou corrosão avançada?(Sim)"
when
	Sintoma(evidencia == new String("2|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("3|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Sim", "32",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(65%)");
	insert(diag);
end

rule "#33 - Após uma inspeção visual, revelado pontos de ferrugem ou corrosão avançada?(Não)"
when
	Sintoma(evidencia == new String("2|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("3|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Não", "33",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(58%)");
	insert(diag);
end

rule "#34 - Há fuligem na traseira do veículo?(Não)"
when
	not Ignorar(ID == 2);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Batida".getBytes(), "UTF-8"));
	eval(answer("2|Há fuligem na traseira do veículo?", List.of("Sim","Não"), "Não", "34",false));
then

end

rule "#35 - Após uma inspeção visual, revelado pontos de ferrugem ou corrosão avançada?(Sim)"
when
	Sintoma(evidencia == new String("2|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("4|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Sim", "35",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(58%)");
	insert(diag);
end

rule "#36 - Após uma inspeção visual, revelado pontos de ferrugem ou corrosão avançada?(Não)"
when
	Sintoma(evidencia == new String("2|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("4|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Não", "36",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(50%)");
	insert(diag);
end

rule "#37 - Qual destes sintomas o automóvel apresenta?(Gases de escape dentro ou ao redor do veículo)"
when
	not Ignorar(ID == 2);
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Cheiro de gases de escape ao redor do veículo", "37",false));
then

end

rule "#38 - Há fuligem na traseira do veículo?(Sim)"
when
	not Ignorar(ID == 2);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro de gases de escape ao redor do veículo".getBytes(), "UTF-8"));
	eval(answer("3|Há fuligem na traseira do veículo?", List.of("Sim","Não"), "Sim", "38",false));
then

end

rule "#39 - Após uma inspeção visual, revelado pontos de ferrugem ou corrosão avançada?(Sim)"
when
	Sintoma(evidencia == new String("3|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("5|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Sim", "39",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(65%)");
	insert(diag);
end

rule "#40 - Após uma inspeção visual, revelado pontos de ferrugem ou corrosão avançada?(Sim)"
when
	Sintoma(evidencia == new String("3|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("5|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Não", "40",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(58%)");
	insert(diag);
end

rule "#41 - Há fuligem na traseira do veículo?(Não)"
when
	not Ignorar(ID == 2);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro de gases de escape ao redor do veículo".getBytes(), "UTF-8"));
	eval(answer("3|Há fuligem na traseira do veículo?", List.of("Sim","Não"), "Não", "41",false));
then

end

rule "#42 - Após uma inspeção visual, revelado pontos de ferrugem ou corrosão avançada?(Sim)"
when
	Sintoma(evidencia == new String("3|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("6|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Sim", "42",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(58%)");
	insert(diag);
end

rule "#43 - Após uma inspeção visual, revelado pontos de ferrugem ou corrosão avançada?(Sim)"
when
	Sintoma(evidencia == new String("3|Há fuligem na traseira do veículo?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("6|Existem pontos de ferrugem ou corrosão avançada?", List.of("Sim","Não"), "Não", "43",false));
then
	Diagnostico diag = new Diagnostico("Tubo de escape danificado.(50%)");
	insert(diag);
end

rule "#44 - Qual destes sintomas o automóvel apresenta?(Estalidos rítmicos e gases de escape dentro do compartimento do motor)"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Ruído de estalidos Rítmicos", "44",true));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Cheiro anormal no compartimento do motor", "44",true));
then
	Ignorar ign = new Ignorar(3);
	insert(ign);
end

rule "#45 - Existe fuligem visível?(Sim)"
when
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de estalidos Rítmicos".getBytes(), "UTF-8"));
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro anormal no compartimento do motor".getBytes(), "UTF-8"));
	eval(answer("1|Existe fuligem visível?", List.of("Sim","Não"), "Sim", "45",false));

then

end

rule "#46 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("1|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("11|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "46",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(100%)");
	insert(diag);
end

rule "#47 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("1|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("11|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "47",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(93%)");
	insert(diag);
end

rule "#48 - Existe fuligem visível?(Não)"
when
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de estalidos Rítmicos".getBytes(), "UTF-8"));
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro anormal no compartimento do motor".getBytes(), "UTF-8"));
	eval(answer("1|Existe fuligem visível?", List.of("Sim","Não"), "Não", "48",false));
then

end

rule "#49 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("1|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("12|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "49",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(93%)");
	insert(diag);
end

rule "#50 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("1|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("12|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "50",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(85%)");
	insert(diag);
end

rule "#51 - Qual destes sintomas o automóvel apresenta?(Ruído de estalidos Rítmicos)"
when
	not Ignorar(ID == 3);
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Ruído de estalidos Rítmicos", "51",false));
then

end

rule "#52 - Existe fuligem visível?(Sim)"
when
	not Ignorar(ID == 3);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de estalidos Rítmicos".getBytes(), "UTF-8"));
	eval(answer("2|Existe fuligem visível?", List.of("Sim","Não"), "Sim", "52",false));
then

end

rule "#53 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("2|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("13|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "53",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(65%)");
	insert(diag);
end

rule "#54 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("2|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("13|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "54",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(58%)");
	insert(diag);
end

rule "#55 - Existe fuligem visível?(Não)"
when
	not Ignorar(ID == 3);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de estalidos Rítmicos".getBytes(), "UTF-8"));
	eval(answer("2|Existe fuligem visível?", List.of("Sim","Não"), "Não", "55",false));
then

end

rule "#56 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("2|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("13|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "56",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(58%)");
	insert(diag);
end

rule "#57 - O automóvel tem uma perda de potência acentuada?(Nåo)"
when
	Sintoma(evidencia == new String("2|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("13|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "57",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(50%)");
	insert(diag);
end

rule "#58 - Qual destes sintomas o automóvel apresenta?(Cheiro anormal no compartimento do motor)"
when
	not Ignorar(ID == 3);
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Cheiro anormal no compartimento do motor", "58",true));
then

end

rule "#59 - Existe fuligem visível?(Sim)"
when
	not Ignorar(ID == 3);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro anormal no compartimento do motor".getBytes(), "UTF-8"));
	eval(answer("3|Existe fuligem visível?", List.of("Sim","Não"), "Sim", "59",false));
then

end

rule "#60 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("3|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("14|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "60",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(65%)");
	insert(diag);
end

rule "#61 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("3|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("14|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "61",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(58%)");
	insert(diag);
end

rule "#62 - Existe fuligem visível?(Não)"
when
	not Ignorar(ID == 3);
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Cheiro anormal no compartimento do motor".getBytes(), "UTF-8"));
	eval(answer("3|Existe fuligem visível?", List.of("Sim","Não"), "Não", "62",false));
then

end

rule "#63 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("3|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("15|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "63",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(58%)");
	insert(diag);
end

rule "#64 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("3|Existe fuligem visível?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("15|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "64",false));
then
	Diagnostico diag = new Diagnostico("Junta do coletor de escape queimada.(50%)");
	insert(diag);
end

rule "#65 - Qual destes sintomas o automóvel apresenta?(Ruído de chocalho)"
when
    Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Irregularidades no motor".getBytes(), "UTF-8"));
	eval(answer("1|Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Sopro ou Assobio", "Cheiro dentro do veículo", "Ruído de Batida", "Cheiro de gases de escape ao redor do veículo", "Ruído de Chocalho","Ruído de estalidos Rítmicos","Cheiro anormal no compartimento do motor"), "Ruído de Chocalho", "65",true));
then

end

rule "#66 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Chocalho".getBytes(), "UTF-8"));
	eval(answer("7|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim", "66",false));
then

end

rule "#67 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("7|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("8|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "67",false));
then

end

rule "#68 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("8|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("5|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Sim", "68",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(80%)");
	insert(diag);
end

rule "#69 - O motor morre ou há algumas falhas ao acelerar?(Não)"
when
	Sintoma(evidencia == new String("8|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("5|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Não", "69",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(70%)");
	insert(diag);
end

rule "#70 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("7|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("8|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "70",false));
then

end

rule "#71 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("8|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("6|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Sim", "71",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(70%)");
	insert(diag);
end

rule "#72 - O motor morre ou há algumas falhas ao acelerar?(Não)"
when
	Sintoma(evidencia == new String("8|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("6|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Não", "72",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(60%)");
	insert(diag);
end

rule "#73 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	Sintoma(evidencia == new String("1|Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Chocalho".getBytes(), "UTF-8"));
	eval(answer("7|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "73",false));
then

end

rule "#74 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("7|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("9|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "74",false));
then

end

rule "#75 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("9|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("7|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Sim", "75",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(70%)");
	insert(diag);
end

rule "#75.5 - O motor morre ou há algumas falhas ao acelerar?(Não)"
when
	Sintoma(evidencia == new String("9|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("7|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Não", "75.5",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(60%)");
	insert(diag);
end

rule "#76 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("7|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("9|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "76",false));
then

end

rule "#77 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("9|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("8|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Sim", "77",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(60%)");
	insert(diag);
end

rule "#78 - O motor morre ou há algumas falhas ao acelerar?(Não)"
when
	Sintoma(evidencia == new String("9|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("8|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Não", "78",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(50%)");
	insert(diag);
end

rule "#79 - Luzes do painel"
when
    eval(answer("Quais são os sintomas que o seu automóvel apresenta?", List.of("Irregularidades no motor","Luzes do painel", "O veículo tem dificuldades ao dar o terceiro contacto de ignição", "Fumo anormal"), "Luzes do painel", "78",true));
then

end

rule "#80 - Luz de óleo"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Luzes do painel".getBytes(), "UTF-8"));
	eval(answer("Qual é a luz que observa?", List.of("Luz de óleo","Luz do motor"), "Luz de óleo", "80",true));
then
	
end

rule "#81 - O automóvel está com o nível de óleo normal?(Sim)"
when
	Sintoma(evidencia == new String("Qual é a luz que observa?".getBytes(), "UTF-8"), valor == new String("Luz de óleo".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel está com o nível de óleo normal?", List.of("Sim","Não"), "Sim", "81",false));
then
	Diagnostico diag = new Diagnostico("Escovas do motor de arranque danificadas.");
	insert(diag);
end

rule "#84 - O automóvel está com o nível de óleo normal?(Não)"
when
	Sintoma(evidencia == new String("Qual é a luz que observa?".getBytes(), "UTF-8"), valor == new String("Luz de óleo".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel está com o nível de óleo normal?", List.of("Sim","Não"), "Não", "84",false));
then

end

rule "#85 - O automóvel está a pingar óleo?(Sim)"
when
	Sintoma(evidencia == new String("1|O automóvel está com o nível de óleo normal?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("O automóvel está a pingar óleo?", List.of("Sim","Não"), "Sim", "85",false));
then
	Diagnostico diag = new Diagnostico("Fuga de óleo.");
	insert(diag);
end

rule "#86 - O automóvel está a pingar óleo?(Não)"
when
	Sintoma(evidencia == new String("1|O automóvel está com o nível de óleo normal?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("O automóvel está a pingar óleo?", List.of("Sim","Não"), "Não", "86",false));
then
	Diagnostico diag = new Diagnostico("Falta de óleo.");
	insert(diag);
end

rule "#87 - Luz do motor"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Luzes do painel".getBytes(), "UTF-8"));
	eval(answer("Qual é a luz que observa?", List.of("Luz de óleo","Luz do motor"), "Luz do motor", "87",true));
then

end

rule "#88 - Qual destes sintomas o automóvel apresenta?(Ruído de chocalho)"
when
	Sintoma(evidencia == new String("Qual é a luz que observa?".getBytes(), "UTF-8"), valor == new String("Luz do motor".getBytes(), "UTF-8"));
	eval(answer("Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Chocalho","Problemas na ignição"), "Ruído de Chocalho", "88",true));
then

end

rule "#89 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
	Sintoma(evidencia == new String("Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Chocalho".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim", "89",false));
then

end

rule "#90 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("1|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "90",false));
then

end

rule "#91 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("1|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Sim", "91",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(100%)");
	insert(diag);
end

rule "#92 - O motor morre ou há algumas falhas ao acelerar?(Não)"
when
	Sintoma(evidencia == new String("1|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Não", "92",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(90%)");
	insert(diag);
end

rule "#93 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("1|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "93",false));
then

end

rule "#94 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("1|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Sim", "94",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(90%)");
	insert(diag);
end

rule "#95 - O motor morre ou há algumas falhas ao acelerar?(Não)"
when
	Sintoma(evidencia == new String("1|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Não", "95",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(80%)");
	insert(diag);
end

rule "#96 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	Sintoma(evidencia == new String("Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Ruído de Chocalho".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "96",false));
then

end

rule "#97 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("1|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "97",false));
then

end

rule "#98 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("2|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("3|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Sim", "98",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(90%)");
	insert(diag);
end

rule "#99 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("2|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("3|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Não", "99",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(80%)");
	insert(diag);
end

rule "#100 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("1|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "100",false));
then

end

rule "#101 - O motor morre ou há algumas falhas ao acelerar?(Sim)"
when
	Sintoma(evidencia == new String("2|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("4|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Sim", "101",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(80%)");
	insert(diag);
end

rule "#102 - O motor morre ou há algumas falhas ao acelerar?(Não)"
when
	Sintoma(evidencia == new String("2|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("4|O motor morre ou há algumas falhas ao acelerar?", List.of("Sim","Não"), "Não", "102",false));
then
	Diagnostico diag = new Diagnostico("Catalisador obstruído.(70%)");
	insert(diag);
end

rule "#103 - Qual destes sintomas o automóvel apresenta?(Problemas na ignição)"
when
	Sintoma(evidencia == new String("Qual é a luz que observa?".getBytes(), "UTF-8"), valor == new String("Luz do motor".getBytes(), "UTF-8"));
	eval(answer("Qual destes sintomas o automóvel apresenta?", List.of("Ruído de Chocalho","Problemas na ignição"), "Problemas na ignição", "103",true));
then

end

rule "#104 - Sente ou ouve irregularidades durante o funcionamento do motor?(Sim)"
when
	Sintoma(evidencia == new String("Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Problemas na ignição".getBytes(), "UTF-8"));
	eval(answer("Sente ou ouve irregularidades durante o funcionamento do motor?", List.of("Sim","Não"), "Sim", "104",false));
then

end

rule "#105 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
	Sintoma(evidencia == new String("Sente ou ouve irregularidades durante o funcionamento do motor?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim", "105",false));
then
	Diagnostico diag = new Diagnostico("Válvula EGR ou sonda lambda danificada.(100%)");
	insert(diag);
end


rule "#106 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	Sintoma(evidencia == new String("Sente ou ouve irregularidades durante o funcionamento do motor?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "106",false));
then
	Diagnostico diag = new Diagnostico("Válvula EGR ou sonda lambda danificada.(75%)");
	insert(diag);
end

rule "#107 - Sente ou ouve irregularidades durante o funcionamento do motor?(Não)"
when
	Sintoma(evidencia == new String("Qual destes sintomas o automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Problemas na ignição".getBytes(), "UTF-8"));
	eval(answer("Sente ou ouve irregularidades durante o funcionamento do motor?", List.of("Sim","Não"), "Não", "107",false));
then

end

rule "#108 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
	Sintoma(evidencia == new String("Sente ou ouve irregularidades durante o funcionamento do motor?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("3|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim", "108",false));
then
	Diagnostico diag = new Diagnostico("Válvula EGR ou sonda lambda danificada.(75%)");
	insert(diag);
end

rule "#109 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	Sintoma(evidencia == new String("Sente ou ouve irregularidades durante o funcionamento do motor?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("3|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "109",false));
then
	Diagnostico diag = new Diagnostico("Válvula EGR ou sonda lambda danificada.(50%)");
	insert(diag);
end

rule "#110 - Qual destes sintomas o automóvel apresenta?(O veículo tem dificuldades ao dar o terceiro contacto de ignição)"
when
	eval(answer("Quais são os sintomas que o seu automóvel apresenta?", List.of("Irregularidades no motor","Luzes do painel", "O veículo tem dificuldades ao dar o terceiro contacto de ignição", "Fumo anormal"), "O veículo tem dificuldades ao dar o terceiro contacto de ignição", "110",true));
then

end

rule "#111 - O automóvel tem combustível?"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("O veículo tem dificuldades ao dar o terceiro contacto de ignição".getBytes(), "UTF-8"));
	eval(answer("O automóvel tem combustível?", List.of("Sim","Não"), "Sim", "111",false));
then

end

rule "#112 - O Combustível chega à régua de injeção?"
when
	Sintoma(evidencia == new String("O automóvel tem combustível?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("O Combustível chega à régua de injeção?", List.of("Sim","Não"), "Sim","112", false));
then

end

rule "#113 - 4|O automóvel está com o nível de óleo normal? (Sim)"
when
	Sintoma(evidencia == new String("O Combustível chega à régua de injeção?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("4|O automóvel está com o nível de óleo normal?", List.of("Sim","Não"), "Sim", "113",false));
then
	Diagnostico diag = new Diagnostico("Escovas do motor de arranque danificadas.");
	insert(diag);
end

rule "#114 - 4|O automóvel está com o nível de óleo normal? (Não)"
when
	Sintoma(evidencia == new String("O Combustível chega à régua de injeção?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("4|O automóvel está com o nível de óleo normal?", List.of("Sim","Não"), "Não", "114",false));
then

end

rule "#115 - O automóvel está a pingar óleo? (Sim)"
when
	Sintoma(evidencia == new String("4|O automóvel está com o nível de óleo normal?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("O automóvel está a pingar óleo?", List.of("Sim","Não"), "Sim", "115",false));
then
	Diagnostico diag = new Diagnostico("Fuga de óleo.");
	insert(diag);
end

rule "#116 - O automóvel está a pingar óleo? (Não)"
when
	Sintoma(evidencia == new String("4|O automóvel está com o nível de óleo normal?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("O automóvel está a pingar óleo?", List.of("Sim","Não"), "Não", "116",false));
then
	Diagnostico diag = new Diagnostico("Falta de óleo.");
	insert(diag);
end

rule "#119 - O Combustível chega à régua de injeção?"
when
	Sintoma(evidencia == new String("O automóvel tem combustível?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("O Combustível chega à régua de injeção?", List.of("Sim","Não"), "Não", "119",false));
then
	Diagnostico diag = new Diagnostico("Bomba de combustível defeituosa");
	insert(diag);
end

rule "#120 - O automóvel tem combustível?"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("O veículo tem dificuldades ao dar o terceiro contacto de ignição".getBytes(), "UTF-8"));
	eval(answer("O automóvel tem combustível?", List.of("Sim","Não"), "Não", "120",false));
then

end

rule "#121 - Ao reabastecer o veículo, permanece sem combustível?"
when
	Sintoma(evidencia == new String("O automóvel tem combustível?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("Ao reabastecer o veículo, permanece sem combustível?", List.of("Sim","Não"), "Sim", "121",false));
then
	Diagnostico diag = new Diagnostico("Fuga de combustível");
	insert(diag);
end

rule "#122 - Ao reabastecer o veículo, permanece sem combustível?"
when
	Sintoma(evidencia == new String("O automóvel tem combustível?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("Ao reabastecer o veículo, permanece sem combustível?", List.of("Sim","Não"), "Não", "122",false));
then
	Diagnostico diag = new Diagnostico("Falta de combustível");
	insert(diag);
end

rule "#123 - Quais são os sintomas que o seu automóvel apresenta?(Fumo anormal)"
when
	eval(answer("Quais são os sintomas que o seu automóvel apresenta?", List.of("Irregularidades no motor","Luzes do painel", "O veículo tem dificuldades ao dar o terceiro contacto de ignição", "Fumo anormal"), "Fumo anormal","123", true));
then

end

rule "#124 - Qual é a coloração do fumo?(Esbranquiçado)"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Fumo anormal".getBytes(), "UTF-8"));
	eval(answer("1|Qual é a coloração do fumo?", List.of("Esbranquiçado","Azulado", "Escura"), "Esbranquiçado", "124",false));
then
	
end

rule "#125 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("1|Qual é a coloração do fumo?".getBytes(), "UTF-8"), valor == new String("Esbranquiçado".getBytes(), "UTF-8"));
	eval(answer("3|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "125",false));
then

end

rule "#126 - O automóvel tem pouca água no reservatório?(Sim)"
when
	Sintoma(evidencia == new String("3|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel tem pouca água no reservatório?", List.of("Sim","Não"), "Sim", "126",false));
then
	Diagnostico diag = new Diagnostico("Junta da cabeça queimada.(100%)");
	insert(diag);
end

rule "#127 - O automóvel tem pouca água no reservatório?(Não)"
when
	Sintoma(evidencia == new String("3|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel tem pouca água no reservatório?", List.of("Sim","Não"), "Não", "127",false));
then
	Diagnostico diag = new Diagnostico("Junta da cabeça queimada.(75%)");
	insert(diag);
end

rule "#128 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("1|Qual é a coloração do fumo?".getBytes(), "UTF-8"), valor == new String("Esbranquiçado".getBytes(), "UTF-8"));
	eval(answer("3|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "128", false));
then

end

rule "#129 - O automóvel tem pouca água no reservatório?(Sim)"
when
	Sintoma(evidencia == new String("3|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel tem pouca água no reservatório?", List.of("Sim","Não"), "Sim", "129", false));
then
	Diagnostico diag = new Diagnostico("Junta da cabeça queimada.(75%)");
	insert(diag);
end

rule "#130 - O automóvel tem pouca água no reservatório?(Não)"
when
	Sintoma(evidencia == new String("3|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel tem pouca água no reservatório?", List.of("Sim","Não"), "Não", "130",false));
then
	Diagnostico diag = new Diagnostico("Junta da cabeça queimada.(50%)");
	insert(diag);
end

rule "#131 - Qual é a coloração do fumo?(Azulado)"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Fumo anormal".getBytes(), "UTF-8"));
	eval(answer("1|Qual é a coloração do fumo?", List.of("Esbranquiçado","Azulado", "Escura"), "Azulado", "131",false));
then
	
end

rule "#132 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("1|Qual é a coloração do fumo?".getBytes(), "UTF-8"), valor == new String("Azulado".getBytes(), "UTF-8"));
	eval(answer("4|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "132",false));
then

end

rule "#133 - O automóvel está com o nível de óleo normal?(Não)"
when
	Sintoma(evidencia == new String("4|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel está com o nível de óleo normal?", List.of("Sim","Não"), "Não", "133",false));
then
	Diagnostico diag = new Diagnostico("Desgaste dos segmentos (100%)");
	insert(diag);
end

rule "#134 - O automóvel está com o nível de óleo normal?(Sim)"
when
	Sintoma(evidencia == new String("4|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel está com o nível de óleo normal?", List.of("Sim","Não"), "Sim", "134",false));
then
	Diagnostico diag = new Diagnostico("Desgaste dos segmentos (75%)");
	insert(diag);
end

rule "#135 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("1|Qual é a coloração do fumo?".getBytes(), "UTF-8"), valor == new String("Azulado".getBytes(), "UTF-8"));
	eval(answer("4|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "135",false));
then

end

rule "#136 - O automóvel está com o nível de óleo normal?(Não)"
when
	Sintoma(evidencia == new String("4|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("3|O automóvel está com o nível de óleo normal?", List.of("Sim","Não"), "Não", "136",false));
then
	Diagnostico diag = new Diagnostico("Desgaste dos segmentos (75%)");
	insert(diag);
end

rule "#137 - O automóvel está com o nível de óleo normal?(Sim)"
when
	Sintoma(evidencia == new String("4|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("3|O automóvel está com o nível de óleo normal?", List.of("Sim","Não"), "Sim", "137",false));
then
	Diagnostico diag = new Diagnostico("Desgaste dos segmentos (50%)");
	insert(diag);
end

rule "#138 - Qual é a coloração do fumo?(Escura)"
when
	Sintoma(evidencia == new String("Quais são os sintomas que o seu automóvel apresenta?".getBytes(), "UTF-8"), valor == new String("Fumo anormal".getBytes(), "UTF-8"));
	eval(answer("1|Qual é a coloração do fumo?", List.of("Esbranquiçado","Azulado", "Escura"), "Escura", "138",false));
then

end

rule "#139 - O automóvel tem uma perda de potência acentuada?(Sim)"
when
	Sintoma(evidencia == new String("1|Qual é a coloração do fumo?".getBytes(), "UTF-8"), valor == new String("Escura".getBytes(), "UTF-8"));
	eval(answer("10|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Sim", "139",false));
then

end

rule "#140 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
	Sintoma(evidencia == new String("10|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("8|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim", "140",false));
then

end

rule "#141 - O automóvel tem as velas escuras?(Sim)"
when
	Sintoma(evidencia == new String("8|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel tem as velas escuras?", List.of("Sim","Não"), "Sim", "141",false));
then
	Diagnostico diag = new Diagnostico("Sensor de Fluxo de ar defeituoso.(100%)");
	insert(diag);
end

rule "#142 - O automóvel tem as velas escuras?(Não)"
when
	Sintoma(evidencia == new String("8|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("1|O automóvel tem as velas escuras?", List.of("Sim","Não"), "Não", "142",false));
then
	Diagnostico diag = new Diagnostico("Sensor de Fluxo de ar defeituoso.(83%)");
	insert(diag);
end

rule "#143 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	Sintoma(evidencia == new String("10|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("8|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "143",false));
then

end

rule "#144 - O automóvel tem as velas escuras?(Sim)"
when
	Sintoma(evidencia == new String("8|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel tem as velas escuras?", List.of("Sim","Não"), "Sim", "144", false));
then
	Diagnostico diag = new Diagnostico("Sensor de Fluxo de ar defeituoso.(83%)");
	insert(diag);
end

rule "#145 - O automóvel tem as velas escuras?(Não)"
when
	Sintoma(evidencia == new String("8|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("2|O automóvel tem as velas escuras?", List.of("Sim","Não"), "Não", "145",false));
then
	Diagnostico diag = new Diagnostico("Sensor de Fluxo de ar defeituoso.(67%)");
	insert(diag);
end

rule "#146 - O automóvel tem uma perda de potência acentuada?(Não)"
when
	Sintoma(evidencia == new String("1|Qual é a coloração do fumo?".getBytes(), "UTF-8"), valor == new String("Escura".getBytes(), "UTF-8"));
	eval(answer("10|O automóvel tem uma perda de potência acentuada?", List.of("Sim","Não"), "Não", "146",false));
then

end

rule "#147 - O automóvel tem consumido mais combustível do que o habitual?(Sim)"
when
	Sintoma(evidencia == new String("10|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("9|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Sim", "147",false));
then

end

rule "#148 - O automóvel tem as velas escuras?(Sim)"
when
	Sintoma(evidencia == new String("9|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("3|O automóvel tem as velas escuras?", List.of("Sim","Não"), "Sim", "148",false));
then
	Diagnostico diag = new Diagnostico("Sensor de Fluxo de ar defeituoso.(83%)");
	insert(diag);
end

rule "#149 - O automóvel tem as velas escuras?(Não)"
when
	Sintoma(evidencia == new String("9|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Sim".getBytes(), "UTF-8"));
	eval(answer("3|O automóvel tem as velas escuras?", List.of("Sim","Não"), "Não", "149",false));
then
	Diagnostico diag = new Diagnostico("Sensor de Fluxo de ar defeituoso.(67%)");
	insert(diag);
end
rule "#150 - O automóvel tem consumido mais combustível do que o habitual?(Não)"
when
	Sintoma(evidencia == new String("10|O automóvel tem uma perda de potência acentuada?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("9|O automóvel tem consumido mais combustível do que o habitual?", List.of("Sim","Não"), "Não", "150",false));
then

end

rule "#151 - O automóvel tem as velas escuras?(Sim)"
when
	Sintoma(evidencia == new String("9|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("4|O automóvel tem as velas escuras?", List.of("Sim","Não"), "Sim", "151",false));
then
	Diagnostico diag = new Diagnostico("Sensor de Fluxo de ar defeituoso.(67%)");
	insert(diag);
end

rule "#152 - O automóvel tem as velas escuras?(Não)"
when
	Sintoma(evidencia == new String("9|O automóvel tem consumido mais combustível do que o habitual?".getBytes(), "UTF-8"), valor == new String("Não".getBytes(), "UTF-8"));
	eval(answer("4|O automóvel tem as velas escuras?", List.of("Sim","Não"), "Não", "152",false));
then
	Diagnostico diag = new Diagnostico("Sensor de Fluxo de ar defeituoso.(50%)");
	insert(diag);
end
